Parameters:
  Prefix:
    Type: String
    Description: "Prefix for naming resources"
    Default: "my"  # You can set a default value or leave it empty for users to specify

  ClusterName:
    Type: String
    Description: Name of the ECS cluster to deploy services

  # Subnet1:
  #   Type: AWS::EC2::Subnet::Id
  #   Description: ID of the first subnet for the ECS service

  # Subnet2:
  #   Type: AWS::EC2::Subnet::Id
  #   Description: ID of the second subnet for the ECS service

  # myECSSecurityGroup:
  #   Type: AWS::EC2::SecurityGroup::Id
  #   Description: Security group for ECS tasks

  # myECSTaskExecutionRole:
  #   Type: String
  #   Description: ARN of the ECS Task Execution Role

  # myS3Bucket:
  #   Type: String
  #   Description: Name of the S3 bucket for storage

  # mySQSQueue:
  #   Type: String
  #   Description: URL of the SQS queue for messaging

  # TargetGroupArn:
  #   Type: String
  #   Description: ARN of the target group associated with the ALB

  # myECSTaskRole:
  #   Type: String
  #   Description: Other services like sqs permitions


Resources:
  # Task Definition for Microservice 1
  myMicroservice1TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub "${Prefix}-microservice1TaskDefinition"
      Cpu: "256"
      Memory: "512"
      NetworkMode: awsvpc
      ExecutionRoleArn: !ImportValue
        'Fn::Sub': "${Prefix}-ECSTaskExecutionRole"
      TaskRoleArn: !ImportValue
        'Fn::Sub': "${Prefix}-ECSTaskExecutionRole"
      ContainerDefinitions:
        - Name: myMicroservice1
          Image: "nginx:latest"    # Placeholder image before building uploading from Jenkins
          Essential: true
          PortMappings:
            - ContainerPort: 80
          Environment:
            - Name: SQS_QUEUE_URL
              Value: !ImportValue SQSQueueUrl
            - Name: S3_BUCKET_NAME
              Value: !ImportValue S3BucketArn
      # EnableExecuteCommand: true

  # Task Definition for Microservice 2
  myMicroservice2TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub "${Prefix}-microservice2TaskDefinition"
      Cpu: "256"
      Memory: "512"
      NetworkMode: awsvpc
      TaskRoleArn: !ImportValue
        'Fn::Sub': "${Prefix}-ECSTaskExecutionRole"
      ExecutionRoleArn: !ImportValue
        'Fn::Sub': "${Prefix}-ECSTaskExecutionRole"
      ContainerDefinitions:
        - Name: myMicroservice2
          Image: "nginx:latest"   # Using a simple, publicly available image as a placeholder
          Essential: true
          Environment:
            - Name: SQS_QUEUE_URL
              Value: !ImportValue SQSQueueUrl
            - Name: S3_BUCKET_NAME
              Value: !ImportValue S3BucketName
      # EnableExecuteCommand: true

  # ECS Service for Microservice 1 (connected to Load Balancer)
  myMicroservice1Service:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref ClusterName
      ServiceName: !Sub "${Prefix}-microservice1Service"
      TaskDefinition: !Ref myMicroservice1TaskDefinition
      DesiredCount: 1
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - !ImportValue
                'Fn::Sub': "${Prefix}-Subnet1"
            - !ImportValue
               'Fn::Sub': "${Prefix}-Subnet2"
          SecurityGroups:
            - !ImportValue
                'Fn::Sub': "${Prefix}-ECSSecurityGroup"
          AssignPublicIp: ENABLED
      LoadBalancers:
        - TargetGroupArn: !ImportValue
            'Fn::Sub': "${Prefix}-TargetGroupArn"
          ContainerName: myMicroservice1
          ContainerPort: 80
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
      HealthCheckGracePeriodSeconds: 60

  # ECS Service for Microservice 2 (without Load Balancer)
  myMicroservice2Service:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref ClusterName
      ServiceName: !Sub "${Prefix}-microservice2Service"
      TaskDefinition: !Ref myMicroservice2TaskDefinition
      DesiredCount: 1
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - !ImportValue
                'Fn::Sub': "${Prefix}-Subnet1"
            - !ImportValue
               'Fn::Sub': "${Prefix}-Subnet2"
          SecurityGroups:
            - !ImportValue
                'Fn::Sub': "${Prefix}-ECSSecurityGroup"
          AssignPublicIp: ENABLED
